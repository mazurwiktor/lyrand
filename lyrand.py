import argparse
import csv
import plyr
import threading


def csv2list(path):
    with open(path) as f:
        reader = csv.reader(f)
        next(reader, None)  # drop header
        return [(r[2], r[1]) for r in reader]


def fetch_lyrics(artist, title):
    query = plyr.Query(artist=artist, title=title, get_type="lyrics")
    items = query.commit()
    if not items:
        print("ERROR: {} - {} has no lyrics".format(artist, title))
        return None
    return items[0].data.decode("utf-8")


def fetch_lyrics_threaded(artist, title, storage):
    lyrics = fetch_lyrics(artist, title)
    if lyrics:
        storage.append((artist, title, lyrics))


def get_args():
    ap = argparse.ArgumentParser(description="generate random lyrics out of given titles")
    ap.add_argument("--csv", help="paths to csv files generated by Exportify", nargs="+")
    return ap.parse_args()


def main():
    def flatten(l):
        return [item for sublist in l for item in sublist]

    args = get_args()
    tracks = [csv2list(path) for path in args.csv]

    threads = []
    lyrics = []
    for artist, title in flatten(tracks):
        t = threading.Thread(target=fetch_lyrics_threaded, args=(artist, title, lyrics))
        threads.append(t)
        t.start()

    for t in threads:
        t.join()

if __name__ == "__main__":
    main()
